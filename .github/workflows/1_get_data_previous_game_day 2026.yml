name: "üèÄ 1. Collect and Prepare NBA Game Data (Previous Game Day)"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 20 * * *"   # run daily 20:00 UTC (adjust if needed)

jobs:
  collect_data:
    runs-on: ubuntu-latest

    permissions:
      contents: write    # allow this job to push to the repo branch

    steps:
      - name: Checkout repository (branch 2026)
        uses: actions/checkout@v4
        with:
          ref: 2026

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Scrape and prepare PREVIOUS game day data (retry with timeout)
        run: |
          echo "=== Starting scrape for PREVIOUS game day (attempt 1) ==="
          timeout 900s python 2026/src/1_get_data_previous_game_day_2026.py
          status=$?

          if [ $status -eq 0 ]; then
            echo "‚úÖ Attempt 1 finished normally."
            exit 0
          elif [ $status -eq 124 ]; then
            echo "‚ö†Ô∏è Attempt 1 TIMED OUT after 900 seconds (exit 124)."
          else
            echo "‚ùå Attempt 1 FAILED with exit code $status (not timeout)."
          fi

          echo "=== Starting scrape for PREVIOUS game day (attempt 2) ==="
          timeout 900s python 2026/src/1_get_data_previous_game_day_2026.py
          status2=$?

          if [ $status2 -eq 0 ]; then
            echo "‚úÖ Attempt 2 finished normally."
            exit 0
          elif [ $status2 -eq 124 ]; then
            echo "‚õî Attempt 2 TIMED OUT after 900 seconds (exit 124). Giving up."
          else
            echo "‚õî Attempt 2 FAILED with exit code $status2. Giving up."
          fi

          # If we reach here, both attempts failed
          exit 1

      - name: Upload artifact (previous game day data)
        uses: actions/upload-artifact@v4
        with:
          name: previous_game_day_data
          path: |
            2026/output/Gathering_Data/**
            !2026/output/Gathering_Data/Next_Game/**

      - name: Commit and push scraped data back to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add 2026/output/Gathering_Data

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            commit_msg="auto-update scraped game data ($(date -u +%Y-%m-%dT%H:%MZ))"
            git commit -m "$commit_msg"
            git push origin 2026
          fi
